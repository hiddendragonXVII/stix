/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
/**
 * A Course of Action is an action taken either to prevent an attack or to respond to an attack that is in progress.
 */
export declare type CourseOfAction = Core & {
    /**
     * The type of this object, which MUST be the literal `course-of-action`.
     */
    type: "course-of-action";
    id?: Id;
    /**
     * The name used to identify the Course of Action.
     */
    name?: string;
    /**
     * A description that provides more details and context about this object, potentially including its purpose and its key characteristics.
     */
    description?: string;
    [k: string]: unknown;
};
/**
 * Common properties and behavior across all STIX Domain Objects and STIX Relationship Objects.
 */
export declare type Core = Properties;
/**
 * The ​binary data type represents a sequence of bytes. In order to allow pattern matching on custom objects, for all properties that use the binary type, the property name MUST end with '_bin'. The JSON MTI serialization represents this as a base64-­encoded string as specified in RFC4648​. Other serializations SHOULD use a native binary type, if available.
 *
 * This interface was referenced by `Properties`'s JSON-Schema definition
 * via the `patternProperty` "^[a-z][a-z0-9_]{0,245}_bin$".
 */
export declare type Binary = string;
/**
 * Rules for custom properties
 */
export interface Properties {
}
export interface Id {
    [k: string]: unknown;
}
