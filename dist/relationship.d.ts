/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
import { Identifier, Timestamp } from "./core";
/**
 * A Campaign is a grouping of adversary behavior that describes a set of malicious activities or attacks that occur over a period of time against a specific set of targets.
 */
export declare type Relationship = Core & {
    /**
     * The type of this object, which MUST be the literal `relationship`.
     */
    type: "relationship";
    /**
     * The name used to identify the type of relationship.
     */
    relationship_type?: string;
    /**
     * The name used to identify the Relationship.
     */
    id?: Id;
    /**
     * A description that helps provide context about the relationship.
     */
    description?: string;
    /**
     * The ID of the source (from) object.
     */
    source_ref: Identifier;
    /**
     * The ID of the target (to) object.
     */
    target_ref: Identifier;
    start_time?: Timestamp;
    stop_time?: Timestamp;
    [k: string]: unknown;
};
/**
 * Common properties and behavior across all STIX Domain Objects and STIX Relationship Objects.
 */
export declare type Core = Properties;
/**
 * The ​binary data type represents a sequence of bytes. In order to allow pattern matching on custom objects, for all properties that use the binary type, the property name MUST end with '_bin'. The JSON MTI serialization represents this as a base64-­encoded string as specified in RFC4648​. Other serializations SHOULD use a native binary type, if available.
 *
 * This interface was referenced by `Properties`'s JSON-Schema definition
 * via the `patternProperty` "^[a-z][a-z0-9_]{0,245}_bin$".
 */
export declare type Binary = string;
/**
 * The time that this Campaign was first seen.
 */
export declare type CampaignFirstSeenTimestamp = string;
/**
 * The time that this Campaign was last seen.
 */
export declare type CampaignLastSeenTimestamp = string;
/**
 * Rules for custom properties
 */
export interface Properties {
}
export interface Id {
    [k: string]: unknown;
}
